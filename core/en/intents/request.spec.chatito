import ../common.chatito
import ../entities/attributes.chatito
import ../entities/specs.cargo.chatito
import ../entities/specs.fuelconsumption.chatito

//this intent is to get a definite value for a specification
//requesting the spec's value by matching the specs name or synonym
//seeks [unknown entity value X] of [specified entity name E] as related to [specified model/trim Y]
//seeks binary value of specified entity name as related to specified model/trim Y
%[request.spec#yesno]('training': '250', 'distribution': 'even')
    is the ~[model] ~[driven wheel]
    is the @[model] a @[seater]
    what is the range of the ~[ev-model]
    what is the maximum range for a ~[model]
    can it ~[tow capacity#canit]

%[request.spec#whatvalue]('training': '250', 'distribution': 'even')
    what is the ~[what is spec-value]
    what is the ~[what is spec-value] ~[for-in-of-on] ~[a-an-the] ~[model]
    what is the ~[model] ~[combined mpg#whatvalue]

~[what is spec-value]
    ~[towing capacity#whatvalue]
    ~[combined mpg]
    ~[0-60 mph]
    ~[top speed]
    ~[quarter mile time]
    ~[combined mpg#whatvalue]
    ~[combined range]


%[request.spec.count]('training': '50', 'distribution': 'even')
    ~[quantify] ~[count-spec] ~[optional-specs] @[make] @[model-trim] ~[have]
    how far off the ground is the ~[model]
    how far from ground to entry is it
    how far off the road is ~[model]
    how high off the ground is the ~[model]

%[request.spec.range]('training': '100', 'distribution': 'even')
    how far can it go on the battery
    how far does a @[model] go on ~[battery-range]
    ~[the] @[model] goes how far on a ~[battery-range]
    how far can a @[model] go in ~[battery-range]
    how far can it go on a ~[battery-range]
    how far can i drive the @[model] on ~[full charge]
    how far can i drive the @[model] before i need to charge it
    how many miles can ~[model] go before you have to recharge
    how far on ev only
    how far can i drive with an ev @[model]
    how far does it go on a full charge
    How far can the @[model] go
    how far will it go on a full charge
    ~[what] ~[the?] battery range on the ~[model]
    how far can i drive with ~[atcl] @[model]
    how far on a charge can you go
    how far can you ~[battery-range]
    how many miles with full tank of gas and ~[battery-range]


%[request.spec.mpg]('training': '50', 'distribution': 'even')
    what is the ~[mpg-spec] ~[of/for] the ~[model]
    what is the ~[mpg-spec] ~[of/for] the @[model]

%[request.spec.colors]('training': '50', 'distribution': 'even')
    can i get the @[model] in @[color]
    ~[optional-specs] @[model] come in @[color]

%[request.spec#features]('training': '50', 'distribution': 'even')
    what are the [safety] features
    what are the technology features
    what are the radio features

~[of-for]
    of
    for


//the difference between request and list is the language the user uses to indicate a response type
//request.spec is for definite values (including binaries, which are definite values)
//users are doing request.spec when they structure their queries so they attempt to find value of X --
// -- in/on/included some item Y. 
// the response should then be the value of requested.spec rather than a list of trims with spec of value X
// the fallback in the case of a false binary, should be list.trims that have binary value true